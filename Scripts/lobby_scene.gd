extends Node2D

@onready var games_list = $CanvasLayer/VBoxContainer/GamesList
@onready var create_game_button = $CanvasLayer/VBoxContainer/HBoxContainer/CreateGameButton
@onready var refresh_button = $CanvasLayer/VBoxContainer/HBoxContainer/RefreshButton

var server_url = Config.SERVER_URL 
var user_token = Global.user_token # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

func _ready():
	print("User Token: ", Global.user_token)
	load_games()

# üìå –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∏–≥—Ä —Å —Å–µ—Ä–≤–µ—Ä–∞
func load_games():
	var http_request = HTTPRequest.new()
	add_child(http_request)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç –≤—ã–∑–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
	http_request.request_completed.connect(_on_games_received)

	var url = server_url + "/game/list"
	var headers = ["Authorization: Bearer " + user_token]

	print("–ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∏–≥—Ä: ", url)
	var error = http_request.request(url, headers, HTTPClient.METHOD_GET)
	if error != OK:
		print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä: ", error)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä
func _on_games_received(_result, response_code, _headers, body):
	if response_code == 200:
		var raw_body = body.get_string_from_utf8()
		print("Raw response:", raw_body)
		var json = JSON.new()
		var parse_error = json.parse(raw_body)
		
		if parse_error != OK:
			print("‚ùå JSON parse error:", json.get_error_message())
			return
			
		var games = json.data
		print("Parsed games:", games)
		games_list.clear()
		for game in games:
			# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–≥—Ä—ã
			if not ("game_id" in game and "owner" in game and "players" in game):
				print("‚ùå Invalid game structure:", game)
				continue
				
			# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
			var short_id = game["game_id"].substr(0, 8)
			var player_count = game["players"].size()
			var status = "–û–∂–∏–¥–∞–Ω–∏–µ" if player_count < 2 else "–ò–≥—Ä–∞ –∏–¥–µ—Ç"
			var entry_text = "%s | %s | %d/2" % [short_id, status, player_count]
			
			# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫
			games_list.add_item(entry_text)
			var last_idx = games_list.get_item_count() - 1
			games_list.set_item_metadata(last_idx, game["game_id"])
			
			print("Added game:", entry_text, "| Metadata:", game["game_id"])
			# games_list.update() 
	else:
		print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä! –ö–æ–¥:", response_code, " –û—Ç–≤–µ—Ç:", body.get_string_from_utf8())


# üìå –í—Ö–æ–¥ –≤ –∏–≥—Ä—É –ø–æ –∫–ª–∏–∫—É
func _on_GamesList_item_activated(index):
	var game_id = games_list.get_item_metadata(index)

	if "–ò–≥—Ä–∞ –∏–¥–µ—Ç" in games_list.get_item_text(index):
		print("‚ùå –≠—Ç–∞ –∏–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å!")
		return

	join_game(game_id)

# üìå –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
func _on_CreateGameButton_pressed():
	var http_request = HTTPRequest.new()
	add_child(http_request)
	http_request.request_completed.connect(_on_game_created)

	var url = server_url + "/game/create"
	var headers = ["Authorization: Bearer " + user_token, "Content-Type: application/json"]
	var body = "{}"  
	print("–ó–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã: ", url)
	var error = http_request.request(url, headers, HTTPClient.METHOD_POST, body)
	if error != OK:
		print("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã: ", error)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∏–≥—Ä—ã
func _on_game_created(_result, response_code, _headers, body):
	if response_code == 200:
		var game = JSON.parse_string(body.get_string_from_utf8())
		print("üéÆ –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞! ID: ", game["game_id"])
		Global.current_game_id = game["game_id"]
		# –°–æ—Ö—Ä–∞–Ω—è–µ–º player1_id –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –±—ã–ª –ø—É—Å—Ç—ã–º
		Global.user_id = game["player1_id"]
		get_tree().change_scene_to_file("res://scenes/gameBoardMultiplayer.tscn")
	else:
		print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã! –ö–æ–¥:", response_code, " –û—Ç–≤–µ—Ç:", body.get_string_from_utf8())

# üìå –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∏–≥—Ä–µ
func join_game(game_id):
	var http_request = HTTPRequest.new()
	add_child(http_request)
	http_request.request_completed.connect(_on_game_joined)

	var url = server_url + "/game/join/" + game_id
	var headers = ["Authorization: Bearer " + user_token]
	
	var error = http_request.request(url, headers, HTTPClient.METHOD_POST)
	if error != OK:
		print("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–≥—Ä–µ: ", error)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É
func _on_game_joined(_result, response_code, _headers, body):
	if response_code == 200:
		var json = JSON.new()
		var parse_error = json.parse(body.get_string_from_utf8())
		
		if parse_error == OK:
			var game = json.data
			print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ –∏–≥—Ä–µ! –û—Ç–≤–µ—Ç:", game)
			Global.current_game_id = str(game.get("game_id"))
			Global.user_id = str(game.get("player2_id"))  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–≥—Ä–æ–∫–∞
			get_tree().change_scene_to_file("res://scenes/gameBoardMultiplayer.tscn")
		else:
			print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞:", json.get_error_message())
	else:
		var error_body = body.get_string_from_utf8() if body else ""
		print("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É! –ö–æ–¥:", response_code, "–û—Ç–≤–µ—Ç:", error_body)

# üìå –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–≥—Ä
func _on_RefreshButton_pressed():
	load_games()


func _on_back_pressed() -> void:
	get_tree().change_scene_to_file("res://scenes/main.tscn")
